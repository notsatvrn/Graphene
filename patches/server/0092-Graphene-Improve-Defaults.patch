From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: satvrn <pastawho@gmail.com>
Date: Sat, 11 Dec 2021 03:25:00 +0000
Subject: [PATCH] Graphene: Improve Defaults


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index b143789e9147f4a71ae5ffc9e1d0c2fdd837e8cb..c0aca425f66f95b356c6115d62165ba4dd7a78f4 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -217,7 +217,7 @@ public class PaperConfig {
         timings = reallyEnableTimings;
         // Airplane end */ // Purpur end
         boolean verboseTimings = getBoolean("timings.verbose", true);
-        TimingsManager.url = getString("timings.url", "https://timings.pl3x.net/");
+        TimingsManager.url = getString("timings.url", "https://timin.gs/");
         if (!TimingsManager.url.endsWith("/")) {
             TimingsManager.url += "/";
         }
diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 7b21391e5955bca028ec8a690ca410937dc4cc15..6325ab58d4222a568635298bbce2e8f5fc369d42 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -61,8 +61,8 @@ public class PaperWorldConfig {
         if (PaperConfig.version < 24) {
             needsSave = true;
 
-            set("despawn-ranges.soft", null);
-            set("despawn-ranges.hard", null);
+            set("despawn-ranges.soft", 28);
+            set("despawn-ranges.hard", 96);
 
             set("spawn-limits.monsters", null);
             set("spawn-limits.animals", null);
@@ -118,7 +118,7 @@ public class PaperWorldConfig {
         wanderingTraderSpawnChanceMax = getInt("wandering-trader.spawn-chance-max", wanderingTraderSpawnChanceMax);
     }
 
-    public boolean fixClimbingBypassingCrammingRule = false;
+    public boolean fixClimbingBypassingCrammingRule = true;
     private void fixClimbingBypassingCrammingRule() {
         fixClimbingBypassingCrammingRule = getBoolean("fix-climbing-bypassing-cramming-rule", fixClimbingBypassingCrammingRule);
     }
@@ -200,9 +200,9 @@ public class PaperWorldConfig {
         }
     }
 
-    public int maxAutoSaveChunksPerTick = 24;
+    public int maxAutoSaveChunksPerTick = 6;
     private void maxAutoSaveChunksPerTick() {
-        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 24);
+        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 6);
     }
 
     private boolean getBoolean(String path, boolean def) {
@@ -285,7 +285,7 @@ public class PaperWorldConfig {
 
     public boolean nerfedMobsShouldJump;
     private void nerfedMobsShouldJump() {
-        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", false);
+        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", true);
     }
 
     public final Reference2IntMap<MobCategory> softDespawnDistances = new Reference2IntOpenHashMap<>(MobCategory.values().length);
@@ -360,7 +360,7 @@ public class PaperWorldConfig {
 
     public boolean optimizeExplosions;
     private void optimizeExplosions() {
-        optimizeExplosions = getBoolean("optimize-explosions", false);
+        optimizeExplosions = getBoolean("optimize-explosions", true);
         log("Optimize explosions: " + optimizeExplosions);
     }
 
@@ -381,17 +381,17 @@ public class PaperWorldConfig {
 
     public int mobSpawnerTickRate;
     private void mobSpawnerTickRate() {
-        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 1);
+        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 2);
     }
 
     public int containerUpdateTickRate;
     private void containerUpdateTickRate() {
-        containerUpdateTickRate = getInt("container-update-tick-rate", 1);
+        containerUpdateTickRate = getInt("container-update-tick-rate", 3);
     }
 
     public boolean disableChestCatDetection;
     private void disableChestCatDetection() {
-        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", false);
+        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", true);
     }
 
     public boolean disablePlayerCrits;
@@ -423,14 +423,14 @@ public class PaperWorldConfig {
         nonPlayerEntitiesOnScoreboards = getBoolean("allow-non-player-entities-on-scoreboards", false);
     }
 
-    public int nonPlayerArrowDespawnRate = -1;
-    public int creativeArrowDespawnRate = -1;
+    public int nonPlayerArrowDespawnRate = 20;
+    public int creativeArrowDespawnRate = 20;
     private void nonPlayerArrowDespawnRate() {
-        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", -1);
+        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", 20);
         if (nonPlayerArrowDespawnRate == -1) {
             nonPlayerArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
-        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", -1);
+        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", 20);
         if (creativeArrowDespawnRate == -1) {
             creativeArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
@@ -456,7 +456,7 @@ public class PaperWorldConfig {
         fixedInhabitedTime = getInt("fixed-chunk-inhabited-time", -1);
     }
 
-    public int grassUpdateRate = 1;
+    public int grassUpdateRate = 4;
     private void grassUpdateRate() {
         grassUpdateRate = Math.max(0, getInt("grass-spread-tick-rate", grassUpdateRate));
         log("Grass Spread Tick Rate: " + grassUpdateRate);
@@ -542,7 +542,7 @@ public class PaperWorldConfig {
 
     public int maxCollisionsPerEntity;
     private void maxEntityCollision() {
-        maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", 8) );
+        maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", 2) );
         log( "Max Entity Collisions: " + maxCollisionsPerEntity );
     }
 
@@ -603,12 +603,12 @@ public class PaperWorldConfig {
         ironGolemsCanSpawnInAir = getBoolean("iron-golems-can-spawn-in-air", ironGolemsCanSpawnInAir);
     }
 
-    public boolean armorStandEntityLookups = true;
+    public boolean armorStandEntityLookups = false;
     private void armorStandEntityLookups() {
-        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", true);
+        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", false);
     }
 
-    public boolean armorStandTick = true;
+    public boolean armorStandTick = false;
     private void armorStandTick() {
         this.armorStandTick = this.getBoolean("armor-stands-tick", this.armorStandTick);
         log("ArmorStand ticking is " + (this.armorStandTick ? "enabled" : "disabled") + " by default");
@@ -620,9 +620,9 @@ public class PaperWorldConfig {
         log("Water over lava flow speed: " + waterOverLavaFlowSpeed);
     }
 
-    public boolean preventMovingIntoUnloadedChunks = false;
+    public boolean preventMovingIntoUnloadedChunks = true;
     private void preventMovingIntoUnloadedChunks() {
-        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", false);
+        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", true);
     }
 
     public enum DuplicateUUIDMode {
@@ -706,7 +706,7 @@ public class PaperWorldConfig {
     }
 
     public boolean cooldownHopperWhenFull = true;
-    public boolean disableHopperMoveEvents = false;
+    public boolean disableHopperMoveEvents = true;
     public boolean hoppersIgnoreOccludingBlocks = true;
     private void hopperOptimizations() {
         cooldownHopperWhenFull = getBoolean("hopper.cooldown-when-full", cooldownHopperWhenFull);
@@ -783,15 +783,16 @@ public class PaperWorldConfig {
         }
     }
 
-    public boolean altItemDespawnRateEnabled;
+    public boolean altItemDespawnRateEnabled = true;
     public java.util.Map<org.bukkit.Material, Integer> altItemDespawnRateMap;
     private void altItemDespawnRate() {
         String path = "alt-item-despawn-rate";
 
-        altItemDespawnRateEnabled = getBoolean(path + ".enabled", false);
+        altItemDespawnRateEnabled = getBoolean(path + ".enabled", true);
 
         java.util.Map<org.bukkit.Material, Integer> altItemDespawnRateMapDefault = new java.util.EnumMap<>(org.bukkit.Material.class);
         altItemDespawnRateMapDefault.put(org.bukkit.Material.COBBLESTONE, 300);
+        altItemDespawnRateMapDefault.put(org.bukkit.Material.NETHERRACK, 300);
         for (org.bukkit.Material key : altItemDespawnRateMapDefault.keySet()) {
             config.addDefault("world-settings.default." + path + ".items." + key, altItemDespawnRateMapDefault.get(key));
         }
@@ -879,7 +880,7 @@ public class PaperWorldConfig {
         enderDragonsDeathAlwaysPlacesDragonEgg = getBoolean("ender-dragons-death-always-places-dragon-egg", enderDragonsDeathAlwaysPlacesDragonEgg);
     }
 
-    public boolean updatePathfindingOnBlockUpdate = true;
+    public boolean updatePathfindingOnBlockUpdate = false;
     private void setUpdatePathfindingOnBlockUpdate() {
         updatePathfindingOnBlockUpdate = getBoolean("update-pathfinding-on-block-update", this.updatePathfindingOnBlockUpdate);
     }
diff --git a/src/main/java/gg/airplane/AirplaneConfig.java b/src/main/java/gg/airplane/AirplaneConfig.java
index 44f3d6a5e2729507fcc7246149183c304fb3ad97..a288dab89d4e1687cbe754f1f65eeaf464b9bb60 100644
--- a/src/main/java/gg/airplane/AirplaneConfig.java
+++ b/src/main/java/gg/airplane/AirplaneConfig.java
@@ -179,8 +179,8 @@ public class AirplaneConfig {
 
 
     private static void projectileLoading() {
-        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", 10, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick.");
-        maxProjectileLoadsPerProjectile = getInt("projectile.max-loads-per-projectile", 10, "Controls how many chunks a projectile", "can load in its lifetime before it gets", "automatically removed.");
+        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", 8, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick.");
+        maxProjectileLoadsPerProjectile = getInt("projectile.max-loads-per-projectile", 8, "Controls how many chunks a projectile", "can load in its lifetime before it gets", "automatically removed.");
 
         setComment("projectile", "Optimizes projectile settings");
     }
diff --git a/src/main/java/io/graphenemc/graphene/GrapheneConfig.java b/src/main/java/io/graphenemc/graphene/GrapheneConfig.java
index 94e1748c798de92f2ba0e6963d6674c026115182..9d115cc4ad54608beded177bff434965b94bba8e 100644
--- a/src/main/java/io/graphenemc/graphene/GrapheneConfig.java
+++ b/src/main/java/io/graphenemc/graphene/GrapheneConfig.java
@@ -213,7 +213,7 @@ public class GrapheneConfig {
     public static boolean enableAsyncMobSpawning;
     public static boolean asyncMobSpawningInitialized;
     private static void asyncMobSpawning() {
-        boolean temp = getBoolean("settings.enable-async-mob-spawning", false,
+        boolean temp = getBoolean("settings.enable-async-mob-spawning", true,
             "Whether or not asynchronous mob spawning should be enabled.",
             "This feature is experimental and should be tested prior to being run in production.",
             "There are currently no known issues, however certain plugins may have issues when",
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index bca9a9a9d3077943aff0d9f0d4576728d6290dca..7d2f32459f5ac3a295d01ad1d38b7b7ae67cb72f 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -98,14 +98,14 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
         //this.snooperEnabled = false; // Patina - completely remove snooper
         this.useNativeTransport = this.get("use-native-transport", true);
         this.enableCommandBlock = this.get("enable-command-block", false);
-        this.spawnProtection = this.get("spawn-protection", 16);
+        this.spawnProtection = this.get("spawn-protection", -1);
         this.opPermissionLevel = this.get("op-permission-level", 4);
         this.functionPermissionLevel = this.get("function-permission-level", 2);
         this.maxTickTime = this.get("max-tick-time", TimeUnit.MINUTES.toMillis(1L));
         this.rateLimitPacketsPerSecond = this.get("rate-limit", 0);
-        this.viewDistance = this.get("view-distance", 10);
+        this.viewDistance = this.get("view-distance", 8);
         this.maxPlayers = this.get("max-players", 20);
-        this.networkCompressionThreshold = this.get("network-compression-threshold", 256);
+        this.networkCompressionThreshold = this.get("network-compression-threshold", 512);
         this.broadcastRconToOps = this.get("broadcast-rcon-to-ops", true);
         this.broadcastConsoleToOps = this.get("broadcast-console-to-ops", true);
         this.maxWorldSize = this.get("max-world-size", (integer) -> {
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 0867a45c171c049c52dafb208b01e0d567f633dd..18f2b644ac8e490fbb8615fcee3abfd55d45d8af 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -216,7 +216,7 @@ public class PurpurConfig {
 
     private static void timingsSettings() {
         if (version < 18) {
-            String oldVal = getString("settings.timings.url", "https://timings.pl3x.net");
+            String oldVal = getString("settings.timings.url", "https://timin.gs");
             com.destroystokyo.paper.PaperConfig.config.set("timings.url", oldVal);
             TimingsManager.url = getString("timings.url", oldVal);
             if (!TimingsManager.url.endsWith("/")) {
@@ -232,7 +232,7 @@ public class PurpurConfig {
         laggingThreshold = getDouble("settings.lagging-threshold", laggingThreshold);
     }
 
-    public static boolean useAlternateKeepAlive = false;
+    public static boolean useAlternateKeepAlive = true;
     private static void useAlternateKeepAlive() {
         useAlternateKeepAlive = getBoolean("settings.use-alternate-keepalive", useAlternateKeepAlive);
     }
@@ -364,7 +364,7 @@ public class PurpurConfig {
         if (endermanShortHeight) EntityType.ENDERMAN.setDimensions(EntityDimensions.scalable(0.6F, 1.9F));
     }
 
-    public static boolean dontSendUselessEntityPackets = false;
+    public static boolean dontSendUselessEntityPackets = true;
     private static void dontSendUselessEntityPackets() {
         dontSendUselessEntityPackets = getBoolean("settings.dont-send-useless-entity-packets", dontSendUselessEntityPackets);
     }
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index d60fefd418cb1f55dfe7c71e12355e0f836ab56b..f3784fb384f3611c18461b69f9fd7614ea1273fa 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -354,7 +354,7 @@ public class PurpurWorldConfig {
     public boolean playerInvulnerableWhileAcceptingResourcePack = false;
     public String playerDeathExpDropEquation = "expLevel * 7";
     public int playerDeathExpDropMax = 100;
-    public boolean teleportIfOutsideBorder = false;
+    public boolean teleportIfOutsideBorder = true;
     public boolean totemOfUndyingWorksInInventory = false;
     public boolean playerFixStuckPortal = false;
     public boolean creativeOnePunch = false;
@@ -2385,7 +2385,7 @@ public class PurpurWorldConfig {
     public boolean villagerRidable = false;
     public boolean villagerRidableInWater = false;
     public double villagerMaxHealth = 20.0D;
-    public int villagerBrainTicks = 1;
+    public int villagerBrainTicks = 2;
     public boolean villagerUseBrainTicksOnlyWhenLagging = true;
     public boolean villagerFollowEmeraldBlock = false;
     public boolean villagerCanBeLeashed = false;
@@ -2393,7 +2393,7 @@ public class PurpurWorldConfig {
     public int villagerSpawnIronGolemLimit = 0;
     public boolean villagerCanBreed = true;
     public int villagerBreedingTicks = 6000;
-    public boolean villagerLobotomizeEnabled = false;
+    public boolean villagerLobotomizeEnabled = true;
     public int villagerLobotomizeCheck = 60;
     public boolean villagerClericsFarmWarts = false;
     public boolean villagerClericFarmersThrowWarts = true;
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index fe51e2836dfb5bf0d4cdaef93cedc1eb4f3eb3e1..8aab9fc148455c03b8a8c99cbfc45a1dadc44bbc 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -132,14 +132,14 @@ public class SpigotWorldConfig
     public double itemMerge;
     private void itemMerge()
     {
-        this.itemMerge = this.getDouble("merge-radius.item", 2.5 );
+        this.itemMerge = this.getDouble("merge-radius.item", 4.0 );
         this.log( "Item Merge Radius: " + this.itemMerge );
     }
 
     public double expMerge;
     private void expMerge()
     {
-        this.expMerge = this.getDouble("merge-radius.exp", 3.0 );
+        this.expMerge = this.getDouble("merge-radius.exp", 6.0 );
         this.log( "Experience Merge Radius: " + this.expMerge );
     }
 
@@ -165,7 +165,7 @@ public class SpigotWorldConfig
     public byte mobSpawnRange;
     private void mobSpawnRange()
     {
-        this.mobSpawnRange = (byte) getInt( "mob-spawn-range", 8 ); // Paper - Vanilla
+        this.mobSpawnRange = (byte) getInt( "mob-spawn-range", 4 ); // Paper - Vanilla
         this.log( "Mob Spawn Range: " + this.mobSpawnRange );
     }
 
@@ -176,14 +176,14 @@ public class SpigotWorldConfig
         this.log( "Item Despawn Rate: " + this.itemDespawnRate );
     }
 
-    public int animalActivationRange = 32;
-    public int monsterActivationRange = 32;
+    public int animalActivationRange = 16;
+    public int monsterActivationRange = 24;
     public int raiderActivationRange = 48;
-    public int miscActivationRange = 16;
+    public int miscActivationRange = 8;
     // Paper start
     public int flyingMonsterActivationRange = 32;
-    public int waterActivationRange = 16;
-    public int villagerActivationRange = 32;
+    public int waterActivationRange = 12;
+    public int villagerActivationRange = 24;
     public int wakeUpInactiveAnimals = 4;
     public int wakeUpInactiveAnimalsEvery = 60*20;
     public int wakeUpInactiveAnimalsFor = 5*20;
@@ -200,7 +200,7 @@ public class SpigotWorldConfig
     public int villagersWorkImmunityFor = 20;
     public boolean villagersActiveForPanic = true;
     // Paper end
-    public boolean tickInactiveVillagers = true;
+    public boolean tickInactiveVillagers = false;
     private void activationRange()
     {
         boolean hasAnimalsConfig = config.getInt("entity-activation-range.animals", this.animalActivationRange) != this.animalActivationRange; // Paper
@@ -272,7 +272,7 @@ public class SpigotWorldConfig
     public int tridentDespawnRate;
     private void arrowDespawnRate()
     {
-        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 1200 );
+        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 300 );
         this.tridentDespawnRate = this.getInt( "trident-despawn-rate", this.arrowDespawnRate );
         this.log( "Arrow Despawn Rate: " + this.arrowDespawnRate + " Trident Respawn Rate:" + this.tridentDespawnRate );
     }
@@ -287,7 +287,7 @@ public class SpigotWorldConfig
     public boolean nerfSpawnerMobs;
     private void nerfSpawnerMobs()
     {
-        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", false );
+        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", true );
         this.log( "Nerfing mobs spawned from spawners: " + this.nerfSpawnerMobs );
     }
 
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 236ffc5a5a1bd2a3fa8303f3191e036908cad2bd..766d0f920f8d4b1af7b750c1c2007e9d8f54ec93 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -24,20 +24,20 @@ settings:
     shutdown-message: Server closed
     minimum-api: none
 spawn-limits:
-    monsters: 70
-    animals: 10
-    water-animals: 5
-    water-ambient: 20
-    water-underground-creature: 5
-    ambient: 15
+    monsters: 32
+    animals: 8
+    water-animals: 8
+    water-ambient: 8
+    water-underground-creature: 8
+    ambient: 1
 chunk-gc:
-    period-in-ticks: 600
+    period-in-ticks: 400
 ticks-per:
     animal-spawns: 400
-    monster-spawns: 1
-    water-spawns: 1
-    water-ambient-spawns: 1
-    water-underground-creature-spawns: 1
-    ambient-spawns: 1
+    monster-spawns: 4
+    water-spawns: 8
+    water-ambient-spawns: 16
+    water-underground-creature-spawns: 16
+    ambient-spawns: 24
     autosave: 6000
 aliases: now-in-commands.yml
