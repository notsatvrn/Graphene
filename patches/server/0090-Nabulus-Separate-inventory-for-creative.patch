From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: froobynooby <froobynooby@froobworld.com>
Date: Mon, 28 Jun 2021 16:01:51 +0930
Subject: [PATCH] Nabulus: Separate inventory for creative


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 8d375e132e76e52aed68fd2e9c335c06e13a6191..a9b3e09c9d74d6b06e0b285cfb5034f38530bcd9 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -104,12 +104,7 @@ import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
 import net.minecraft.world.food.FoodData;
-import net.minecraft.world.inventory.AbstractContainerMenu;
-import net.minecraft.world.inventory.ContainerListener;
-import net.minecraft.world.inventory.ContainerSynchronizer;
-import net.minecraft.world.inventory.HorseInventoryMenu;
-import net.minecraft.world.inventory.ResultSlot;
-import net.minecraft.world.inventory.Slot;
+import net.minecraft.world.inventory.*;
 import net.minecraft.world.item.ComplexItem;
 import net.minecraft.world.item.ItemCooldowns;
 import net.minecraft.world.item.ItemStack;
@@ -269,6 +264,19 @@ public class ServerPlayer extends Player {
     public org.bukkit.event.player.PlayerQuitEvent.QuitReason quitReason = null; // Paper - there are a lot of changes to do if we change all methods leading to the event
     public boolean smoothWorldTeleport; // Slice
 
+    // Nabulus start
+    public void updateInventory(GameType gameMode) {
+        Inventory newInventory = gameMode == GameType.CREATIVE ? creativeInventory : defaultInventory;
+        if (this.inventory != newInventory) {
+            newInventory.selected = this.inventory.selected;
+            this.inventory = newInventory;
+            this.inventoryMenu = new InventoryMenu(this.inventory, !this.level.isClientSide, this);
+            this.initInventoryMenu();
+            this.closeContainer();
+        }
+    }
+    // Nabulus end
+
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
         this.chatVisibility = ChatVisiblity.FULL;
@@ -340,6 +348,7 @@ public class ServerPlayer extends Player {
         this.maxHealthCache = this.getMaxHealth();
         this.cachedSingleMobDistanceMap = new com.destroystokyo.paper.util.PooledHashSets.PooledObjectLinkedOpenHashSet<>(this); // Paper
         this.spawnInvulnerableTime = world.purpurConfig.playerSpawnInvulnerableTicks; // Purpur
+        this.updateInventory(gameMode.getGameModeForPlayer()); // Nabulus
     }
     // Paper start - Chunk priority
     public BlockPos getPointInFront(double inFront) {
@@ -1905,6 +1914,7 @@ public class ServerPlayer extends Player {
 
             this.onUpdateAbilities();
             this.updateEffectVisibility();
+            this.updateInventory(gameMode); // Nabulus
             return event; // Paper
         }
     }
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 7de6b8c757ad0a37d903b5927bd14739203eff7b..f0780b39bcd019e91092e561dbf90d173858bd09 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -149,9 +149,14 @@ public abstract class Player extends LivingEntity {
     protected static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_LEFT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
     protected static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_RIGHT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
     private long timeEntitySatOnShoulder;
-    private final Inventory inventory = new Inventory(this);
+    // Nabulus start
+    //private final Inventory inventory = new Inventory(this);
+    protected Inventory inventory;
+    protected final Inventory defaultInventory = new Inventory(this);
+    protected final Inventory creativeInventory = new Inventory(this);
+    // Nabulus end
     protected PlayerEnderChestContainer enderChestInventory = new PlayerEnderChestContainer(this); // CraftBukkit - add "this" to constructor
-    public final InventoryMenu inventoryMenu;
+    public InventoryMenu inventoryMenu; // Nabulus - final -> not final
     public AbstractContainerMenu containerMenu;
     protected FoodData foodData = new FoodData(this); // CraftBukkit - add "this" to constructor
     protected int jumpTriggerTime;
@@ -223,6 +228,7 @@ public abstract class Player extends LivingEntity {
         this.cooldowns = this.createItemCooldowns();
         this.setUUID(Player.createPlayerUUID(profile));
         this.gameProfile = profile;
+        this.inventory = defaultInventory; // Nabulus - separate inventories for creative/survival
         this.inventoryMenu = new InventoryMenu(this.inventory, !world.isClientSide, this);
         this.containerMenu = this.inventoryMenu;
         this.moveTo((double) pos.getX() + 0.5D, (double) (pos.getY() + 1), (double) pos.getZ() + 0.5D, yaw, 0.0F);
@@ -874,8 +880,13 @@ public abstract class Player extends LivingEntity {
         super.readAdditionalSaveData(nbt);
         this.setUUID(Player.createPlayerUUID(this.gameProfile));
         ListTag nbttaglist = nbt.getList("Inventory", 10);
+        ListTag creativeInventoryTagList = nbt.getList("InventoryCreative", 10); // Nabulus
 
-        this.inventory.load(nbttaglist);
+        // Nabulus start
+        //this.inventory.load(nbttaglist);
+        this.defaultInventory.load(nbttaglist);
+        this.creativeInventory.load(creativeInventoryTagList);
+        // Nabulus end
         this.inventory.selected = nbt.getInt("SelectedItemSlot");
         this.sleepCounter = nbt.getShort("SleepTimer");
         this.experienceProgress = nbt.getFloat("XpP");
@@ -908,7 +919,11 @@ public abstract class Player extends LivingEntity {
     public void addAdditionalSaveData(CompoundTag nbt) {
         super.addAdditionalSaveData(nbt);
         nbt.putInt("DataVersion", SharedConstants.getCurrentVersion().getWorldVersion());
-        nbt.put("Inventory", this.inventory.save(new ListTag()));
+        // Nabulus start
+        //nbt.put("Inventory", this.inventory.save(new ListTag()));
+        nbt.put("Inventory", this.defaultInventory.save(new ListTag()));
+        nbt.put("InventoryCreative", this.creativeInventory.save(new ListTag()));
+        // Nabulus end
         nbt.putInt("SelectedItemSlot", this.inventory.selected);
         nbt.putShort("SleepTimer", (short) this.sleepCounter);
         nbt.putFloat("XpP", this.experienceProgress);
